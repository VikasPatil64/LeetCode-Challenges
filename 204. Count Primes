#https://leetcode.com/problems/count-primes/submissions/1540727791/?envType=problem-list-v2&envId=array

class Solution:
    def countPrimes(self, n: int) -> int:
        if n < 2:
            return 0
            
        is_prime = [True] * n  # Assume all numbers are prime initially
        is_prime[0] = is_prime[1] = False  # 0 and 1 are not prime
        
        for i in range(2, int(n ** 0.5) + 1):  # Iterate only up to sqrt(n)
            if is_prime[i]:  # If i is prime
                for j in range(i * i, n, i):  # Mark multiples of i as non-prime
                    is_prime[j] = False
        
        return sum(is_prime)  # Count True values in the list
        
