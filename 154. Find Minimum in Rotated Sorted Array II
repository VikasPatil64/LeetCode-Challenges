#https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/description/?envType=problem-list-v2&envId=binary-search

class Solution:
    def findMin(self, nums: List[int]) -> int:
        left = 0
        right = len(nums) - 1
        while left < right:
            mid = (left + right) // 2
            if nums[mid] > nums[right]:     #minimus must be in right side
                left = mid + 1
            elif nums[mid] < nums[right]:    #minimum must be in left side
                right = mid
            else:
                right -= 1    #nums[mid] == nums[right] hence decrese right by  1
        return nums[left]
        
